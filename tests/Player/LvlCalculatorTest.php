<?php
declare(strict_types=1);

namespace Game\Player;

use PHPUnit\Framework\Attributes\DataProvider;
use PHPUnit\Framework\TestCase;

class LvlCalculatorTest extends TestCase
{
    public static function expToLvlDataProvider(): iterable
    {
        return [
            [0, 1],
            [99, 1],
            [100, 2],
            [199, 2],
            [200, 3],
            [299, 3],
            [300, 4],
            [699, 4],
            [700, 5],
            [1499, 5],
            [1500, 6],
            [2699, 6],
            [2700, 7],
            [4399, 7],
            [4400, 8],
            [6599, 8],
            [6600, 9],
            [9499, 9],
            [9500, 10],
            [13099, 10],
            [13100, 11],
            [17699, 11],
            [17700, 12],
            [23199, 12],
            [23200, 13],
            [29799, 13],
            [29800, 14],
            [37599, 14],
            [37600, 15],
            [46699, 15],
            [46700, 16],
            [57299, 16],
            [57300, 17],
            [69499, 17],
            [69500, 18],
            [83399, 18],
            [83400, 19],
            [98999, 19],
            [99000, 20],
            [116699, 20],
            [116700, 21],
            [136399, 21],
            [136400, 22],
            [158399, 22],
            [158400, 23],
            [182699, 23],
            [182700, 24],
            [209499, 24],
            [209500, 25],
            [238999, 25],
            [239000, 26],
            [271199, 26],
            [271200, 27],
            [306399, 27],
            [306400, 28],
            [344699, 28],
            [344700, 29],
            [386199, 29],
            [386200, 30],
            [431099, 30],
            [431100, 31],
            [479499, 31],
            [479500, 32],
            [531699, 32],
            [531700, 33],
            [587699, 33],
            [587700, 34],
            [647599, 34],
            [647600, 35],
            [711799, 35],
            [711800, 36],
            [780299, 36],
            [780300, 37],
            [853299, 37],
            [853300, 38],
            [930899, 38],
            [930900, 39],
            [1013399, 39],
            [1013400, 40],
            [1100899, 40],
            [1100900, 41],
            [1193499, 41],
            [1193500, 42],
            [1291499, 42],
            [1291500, 43],
            [1394999, 43],
            [1395000, 44],
            [1504199, 44],
            [1504200, 45],
            [1619199, 45],
            [1619200, 46],
            [1740199, 46],
            [1740200, 47],
            [1867499, 47],
            [1867500, 48],
            [2001199, 48],
            [2001200, 49],
            [2141399, 49],
            [2141400, 50],
            [2288399, 50],
            [2288400, 51],
            [2442299, 51],
            [2442300, 52],
            [2603399, 52],
            [2603400, 53],
            [2771699, 53],
            [2771700, 54],
            [2947599, 54],
            [2947600, 55],
            [3131099, 55],
            [3131100, 56],
            [3322499, 56],
            [3322500, 57],
            [3521999, 57],
            [3522000, 58],
            [3729699, 58],
            [3729700, 59],
            [3945899, 59],
            [3945900, 60],
            [4170699, 60],
            [4170700, 61],
            [4404299, 61],
            [4404300, 62],
            [4646999, 62],
            [4647000, 63],
            [4898999, 63],
            [4899000, 64],
            [5160299, 64],
            [5160300, 65],
            [5431299, 65],
            [5431300, 66],
            [5712099, 66],
            [5712100, 67],
            [6002999, 67],
            [6003000, 68],
            [6303999, 68],
            [6304000, 69],
            [6615599, 69],
            [6615600, 70],
            [6937699, 70],
            [6937700, 71],
            [7270699, 71],
            [7270700, 72],
            [7614799, 72],
            [7614800, 73],
            [7970199, 73],
            [7970200, 74],
            [8336999, 74],
            [8337000, 75],
            [8715499, 75],
            [8715500, 76],
            [9105899, 76],
            [9105900, 77],
            [9508399, 77],
            [9508400, 78],
            [9923299, 78],
            [9923300, 79],
            [10350599, 79],
            [10350600, 80],
            [10790799, 80],
            [10790800, 81],
            [11243899, 81],
            [11243900, 82],
            [11710199, 82],
            [11710200, 83],
            [12189799, 83],
            [12189800, 84],
            [12683099, 84],
            [12683100, 85],
            [13190299, 85],
            [13190300, 86],
            [13711499, 86],
            [13711500, 87],
            [14246999, 87],
            [14247000, 88],
            [14796999, 88],
            [14797000, 89],
            [15361699, 89],
            [15361700, 90],
            [15941399, 90],
            [15941400, 91],
            [16536299, 91],
            [16536300, 92],
            [17146499, 92],
            [17146500, 93],
            [17772399, 93],
            [17772400, 94],
            [18414199, 94],
            [18414200, 95],
            [19071999, 95],
            [19072000, 96],
            [19746199, 96],
            [19746200, 97],
            [20436899, 97],
            [20436900, 98],
            [21144299, 98],
            [21144300, 99],
            [21868799, 99],
            [21868800, 100],
            [22610599, 100],
        ];
    }

    public static function lvlRequirementProvider(): iterable
    {
        return [
            [0, 1],
            [100, 2],
            [200, 3],
            [300, 4],
            [700, 5],
            [1500, 6],
            [2700, 7],
            [4400, 8],
            [6600, 9],
            [9500, 10],
            [13100, 11],
            [17700, 12],
            [23200, 13],
            [29800, 14],
            [37600, 15],
            [46700, 16],
            [57300, 17],
            [69500, 18],
            [83400, 19],
            [99000, 20],
            [116700, 21],
            [136400, 22],
            [158400, 23],
            [182700, 24],
            [209500, 25],
            [239000, 26],
            [271200, 27],
            [306400, 28],
            [344700, 29],
            [386200, 30],
            [431100, 31],
            [479500, 32],
            [531700, 33],
            [587700, 34],
            [647600, 35],
            [711800, 36],
            [780300, 37],
            [853300, 38],
            [930900, 39],
            [1013400, 40],
            [1100900, 41],
            [1193500, 42],
            [1291500, 43],
            [1395000, 44],
            [1504200, 45],
            [1619200, 46],
            [1740200, 47],
            [1867500, 48],
            [2001200, 49],
            [2141400, 50],
            [2288400, 51],
            [2442300, 52],
            [2603400, 53],
            [2771700, 54],
            [2947600, 55],
            [3131100, 56],
            [3322500, 57],
            [3522000, 58],
            [3729700, 59],
            [3945900, 60],
            [4170700, 61],
            [4404300, 62],
            [4647000, 63],
            [5160300, 65],
            [5431300, 66],
            [5712100, 67],
            [6003000, 68],
            [6304000, 69],
            [6615600, 70],
            [6937700, 71],
            [7270700, 72],
            [7614800, 73],
            [7970200, 74],
            [8337000, 75],
            [8715500, 76],
            [9105900, 77],
            [9508400, 78],
            [9923300, 79],
            [10350600, 80],
            [10790800, 81],
            [11243900, 82],
            [11710200, 83],
            [12189800, 84],
            [12683100, 85],
            [13190300, 86],
            [13711500, 87],
            [14247000, 88],
            [14797000, 89],
            [15361700, 90],
            [15941400, 91],
            [16536300, 92],
            [17146500, 93],
            [17772400, 94],
            [18414200, 95],
            [19072000, 96],
            [19746200, 97],
            [20436900, 98],
            [21144300, 99],
            [21868800, 100],
        ];
    }

    #[DataProvider('expToLvlDataProvider')]
    public function testConvertExpToLvl(int $exp, int $expectedLvl): void
    {
        $calculatedLvl = LvlCalculator::convertExpToLvl($exp);

        self::assertEquals($expectedLvl, $calculatedLvl, sprintf('%dexp must result in %dlvl but got %d', $exp, $expectedLvl, $calculatedLvl));
    }

    #[DataProvider('lvlRequirementProvider')]
    public function testMinExpRequired(int $expectedExpRequirement, int $forLvl): void
    {
        self::assertEquals($expectedExpRequirement, LvlCalculator::minExpRequired($forLvl));
    }
}
